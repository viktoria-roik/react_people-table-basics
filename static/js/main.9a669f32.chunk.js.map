{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","sex","name","slug","to","classNames","PeopleTable","people","personSlug","useParams","selectedPerson","find","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","peopleWithParents","personMother","personFather","length","NotFoundPage","App","activeLinkClass","isActive","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9a669f32.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nconst FEMALE_SEX = 'f';\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { sex, name, slug } = person;\n\n  return (\n    <td>\n      <Link\n        to={`/people/${slug}`}\n        className={classNames({\n          'has-text-danger': sex === FEMALE_SEX,\n        })}\n      >\n        {name}\n      </Link>\n    </td>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n  const selectedPerson = people.find(person => person.slug === personSlug);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={person.slug === selectedPerson?.slug\n              ? 'has-background-warning'\n              : ''}\n          >\n            <PersonLink\n              person={person}\n            />\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            {person.mother\n              ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                <td>\n                  {person.motherName || '-'}\n                </td>\n              )}\n            {person.father\n              ? (\n                <PersonLink person={person.father} />\n              ) : (\n                <td>\n                  {person.fatherName || '-'}\n                </td>\n              )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nconst ERROR_MESSAGE = 'Something went wrong';\nconst NO_PEOPLE_ON_SERVER = 'There are no people on the server';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = people.map(person => {\n    const mother = people\n      .find(personMother => personMother.name === person.motherName);\n    const father = people\n      .find(personFather => personFather.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && <Loader />}\n\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {ERROR_MESSAGE}\n              </p>\n            )}\n\n            {people.length === 0 && !isLoading && (\n              <p data-cy=\"noPeopleMessage\">\n                {NO_PEOPLE_ON_SERVER}\n              </p>\n            )}\n\n            {people.length > 0 && (\n              <PeopleTable people={peopleWithParents} />\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => {\n  const activeLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={activeLinkClass}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={activeLinkClass}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <HomePage />\n          }\n        />\n\n        <Route\n          path=\"/people\"\n          element={\n            <PeoplePage />\n          }\n        />\n\n        <Route\n          path=\"/people/:personSlug\"\n          element={\n            <PeoplePage />\n          }\n        />\n\n        <Route\n          path=\"/home\"\n          element={\n            <Navigate to=\"/\" replace />\n          }\n        />\n\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}