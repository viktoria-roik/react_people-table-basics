{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","utils/constants.ts","components/PersonLink/PersonLink.tsx","components/People/People.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","utils/helpers.ts","components/NotFoundPage/NotFoundPage.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","TABLE_ATTRIBUTES","PersonLink","person","sex","name","slug","to","classNames","People","selectedPerson","born","died","mother","father","motherName","fatherName","PeopleTable","people","useParams","personSlug","map","attribute","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","peopleWithParents","find","getPreparedPeople","noPeopleMessage","length","NotFoundPage","Navigation","getLinkClass","isActive","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7f772506.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const ERROR_MESSAGE = 'Something went wrong';\nexport const NO_PEOPLE_ON_SERVER = 'There are no people on the server';\nexport const FEMALE_SEX = 'f';\nexport const EMPTY_VALUE = '-';\nexport const TABLE_ATTRIBUTES = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { FEMALE_SEX } from '../../utils/constants';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { sex, name, slug } = person;\n\n  return (\n    <td>\n      <Link\n        to={`../${slug}`}\n        className={classNames({\n          'has-text-danger': sex === FEMALE_SEX,\n        })}\n      >\n        {name}\n      </Link>\n    </td>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { EMPTY_VALUE } from '../../utils/constants';\n\ntype Props = {\n  person: Person;\n  selectedPerson: string;\n};\n\nexport const People: React.FC<Props> = ({ person, selectedPerson }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={\n        classNames({ 'has-background-warning': selectedPerson === slug })\n      }\n    >\n      <PersonLink person={person} />\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      {mother\n        ? (\n          <PersonLink person={mother} />\n        ) : (\n          <td>\n            {motherName || EMPTY_VALUE}\n          </td>\n        )}\n      {father\n        ? (\n          <PersonLink person={father} />\n        ) : (\n          <td>\n            {fatherName || EMPTY_VALUE}\n          </td>\n        )}\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { TABLE_ATTRIBUTES } from '../../utils/constants';\nimport { People } from '../People/People';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {TABLE_ATTRIBUTES.map(attribute => (\n            <th key={attribute}>{attribute}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <People\n            person={person}\n            key={person.slug}\n            selectedPerson={personSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { ERROR_MESSAGE, NO_PEOPLE_ON_SERVER } from '../../utils/constants';\nimport { getPreparedPeople } from '../../utils/helpers';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = getPreparedPeople(people);\n\n  const noPeopleMessage = !people.length && !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {ERROR_MESSAGE}\n            </p>\n          )}\n\n          {noPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              {NO_PEOPLE_ON_SERVER}\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleTable people={peopleWithParents} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPreparedPeople(people: Person[]) {\n  return people.map((person) => {\n    const mother = people\n      .find(({ name }) => name === person.motherName);\n    const father = people\n      .find(({ name }) => name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n}\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { Navigation } from './components/Navigation/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route path=\"/people\">\n              <Route path=\":personSlug?\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}